# This workflow will release the project

name: NetLicensing Client - Release

on:
  workflow_dispatch:
    inputs:
      release-version:
        required: true
        description: The release version X.Y.Z
      development-version:
        required: true
        description: The next development version X.Y.Z-SNAPSHOT

jobs:
  release:
    runs-on: self-hosted
    container: maven:3.8.6-openjdk-11
    name: Release ${{ github.event.inputs.release-version }} (next dev ${{ github.event.inputs.development-version }})

    steps:
    - uses: actions/checkout@v3
      with:
        ssh-key: '${{ secrets.REPO_SSH_KEY }}'

    # Relies on actions/checkout with 'ssh-key' parameter.
    - name: Prepare git config
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "<netlicensing@labs64.com>"
        git config --global core.sshCommand "$(git config --local --get core.sshCommand)"

    - name: Prepare maven settings.xml
      run: |
        mkdir -p ~/.m2
        cat << EOF >~/.m2/settings.xml
        <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                  xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd">
          <servers>
            <server>
              <id>ossrh</id>
              <username>${{ secrets.OSS_USER }}</username>
              <password>${{ secrets.OSS_PASS }}</password>
            </server>
          </servers>
        </settings>
        EOF

    - name: Import GPG key
      run: echo "${{ secrets.GPG_KEY }}" | base64 -d | gpg --pinentry-mode loopback --passphrase "${{ secrets.GPG_KEY_PASS }}" --import

    - name: Release with Maven
      run: |
        mvn -B release:prepare -Prelease \
            -DautoVersionSubmodules=true \
            -DreleaseVersion=${{ github.event.inputs.release-version }} \
            -Dtag=${{ github.event.inputs.release-version }} \
            -DdevelopmentVersion=${{ github.event.inputs.development-version }} \
            -Darguments="-Dgpg.passphrase=${{ secrets.GPG_KEY_PASS }}"
        mvn -B release:perform -Prelease
